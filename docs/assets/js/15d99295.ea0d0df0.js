"use strict";(self.webpackChunkgss_docs=self.webpackChunkgss_docs||[]).push([[338],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||s;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<s;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7576:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>C,contentTitle:()=>O,default:()=>V,frontMatter:()=>E,metadata:()=>I,toc:()=>P});var a=n(7462),r=n(7294),s=n(3905),o=n(6010),l=n(2466),i=n(6550),u=n(1980),c=n(7392),d=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=m(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[i,u]=f({queryString:n,groupId:a}),[c,p]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),g=(()=>{const e=i??c;return h({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),p(e)}),[u,p,s]),tabValues:s}}var k=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==s&&(d(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},l,{className:(0,o.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":s===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function x(e){const t=(0,k.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}const N={tabItem:"tabItem_Ymn6"};function S(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(N.tabItem,a),hidden:n},t)}const T={centred:"centred_E97d"},E={title:"Getting started",sidebar_position:1},O="Getting started",I={unversionedId:"getting-started/index",id:"getting-started/index",title:"Getting started",description:"Requirements",source:"@site/docs/getting-started/index.mdx",sourceDirName:"getting-started",slug:"/getting-started/",permalink:"/graph-structured-stack/docs/getting-started/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Getting started",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Reference",permalink:"/graph-structured-stack/docs/category/reference"}},C={},P=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Basics",id:"basics",level:2},{value:"Pushing elements",id:"pushing-elements",level:2},{value:"Popping elements",id:"popping-elements",level:2}],j={toc:P},G="wrapper";function V(e){let{components:t,...n}=e;return(0,s.kt)(G,(0,a.Z)({},j,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"getting-started"},"Getting started"),(0,s.kt)("h2",{id:"requirements"},"Requirements"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"gs-stack")," is runtime-agnostic, meaning it works in the browser, in node, deno, bun etc."),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"To install ",(0,s.kt)("inlineCode",{parentName:"p"},"gs-stack"),", use your favourite node package manager:"),(0,s.kt)(x,{mdxType:"Tabs"},(0,s.kt)(S,{value:"npm",label:"npm",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install gs-stack\n"))),(0,s.kt)(S,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm install gs-stack\n"))),(0,s.kt)(S,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add gs-stack\n"))),(0,s.kt)(S,{value:"bun",label:"bun",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"bun add gs-stack\n")))),(0,s.kt)("p",null,"Or directly from github using deno:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { GSStack } from 'https://raw.githubusercontent.com/LaMavia/graph-structured-stack/main/src/index.ts'\n")),(0,s.kt)("h2",{id:"basics"},"Basics"),(0,s.kt)("p",null,"What differentiates a graph-structured stack (GSS) from a regular stack is that its nodes can create a graph instead of a simple line. This allows for sharing common prefixes amongst multiple stacks, asymptotically saving memory. For instance, consider the following ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Graph-structured_stack"},"GSS")," containing four stacks, starting from the top: ",(0,s.kt)("inlineCode",{parentName:"p"},"{7,3,1,0}"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"{7,4,1,0}"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"{7,5,2,0}"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"{8,6,2,0}"),":"),(0,s.kt)("div",{className:T.centred},(0,s.kt)("mermaid",{value:"flowchart RL\n  7--\x3e3\n  7--\x3e4\n  7--\x3e5\n  8--\x3e6\n  3--\x3e1\n  4--\x3e1\n  5--\x3e2\n  6--\x3e2\n  1--\x3e0\n  2--\x3e0"})),(0,s.kt)("p",null,"Using regular stacks in this case would require duplicating common stacks:"),(0,s.kt)("div",{className:T.centred},(0,s.kt)("div",null,(0,s.kt)("mermaid",{value:"flowchart RL\n  8--\x3e6--\x3e2--\x3e0"}),(0,s.kt)("mermaid",{value:"flowchart RL\n  7--\x3e5--\x3e2--\x3e0"}),(0,s.kt)("mermaid",{value:"flowchart RL\n  7--\x3e4--\x3e1--\x3e0"}),(0,s.kt)("mermaid",{value:"flowchart RL\n  7--\x3e3--\x3e1--\x3e0"}))),(0,s.kt)("h2",{id:"pushing-elements"},"Pushing elements"),(0,s.kt)("p",null,"Because new elements can extend any stack, it is necessary to supply the head node of the stack you want extend when pushing. When no head is provided, a new stack is created. For instance, let us implement the above GSS:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { GSStack, GSSNode } from 'gs-stack'\n\nconst stack = new GSStack<number>()\nconst nodes: Record<number, GSSNode<number>> = {}\n\n// {7,3,1,0}\nnodes[0] = stack.push(0)\nnodes[1] = stack.push(1, nodes[0])\nnodes[3] = stack.push(3, nodes[1])\nnodes[7] = stack.push(7, nodes[3])\n\n// {7,4,1,0}\nnodes[4] = stack.push(4, nodes[1])\nnodes[7] = stack.push(7, nodes[4]) // 7 isn't duplicated, as it ends up in the same layer\n\n// {7,5,2,0}\nnodes[2] = stack.push(2, nodes[0])\nnodes[5] = stack.push(5, nodes[2])\nnodes[7] = stack.push(7, nodes[5])\n\n// {8,6,2,0}\nnodes[6] = stack.push(6, nodes[2])\nnodes[8] = stack.push(8, nodes[6])\n")),(0,s.kt)("p",null,"The constructor of ",(0,s.kt)("inlineCode",{parentName:"p"},"GSStack")," takes an optional ",(0,s.kt)("inlineCode",{parentName:"p"},"comparator: (a: T, b: T) => boolean")," function, which returns ",(0,s.kt)("inlineCode",{parentName:"p"},"true"),' iff the two objects are considered "the same". By default, it is set to ',(0,s.kt)("inlineCode",{parentName:"p"},"==="),"."),(0,s.kt)("p",null,"When an item is pushed to a layer, it's checked whether a node with the same value already exists in there. If it does, ",(0,s.kt)("inlineCode",{parentName:"p"},"push")," returns a reference to said node with updated previous nodes; if it doesn't, a new node is created instead."),(0,s.kt)("h2",{id:"popping-elements"},"Popping elements"),(0,s.kt)("p",null,"To pop an element, use the ",(0,s.kt)("inlineCode",{parentName:"p"},"GSStack.pop(node: GSSNode<T>): boolean")," method. It returns ",(0,s.kt)("inlineCode",{parentName:"p"},"true")," iff the element was successfully popped. Podding will fail if you supply a non-head node, meaning a node that has had values pushed on top of it."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"WARNING"),": Once successfully popped, the node loses all of its previous node references, as nodes that are not bound to any stack should not be used in any way connected with a stack (ie. checking relations with other nodes). In practice, it means that you should get the previous nodes of a node before popping it."),(0,s.kt)("p",null,"To access the previous nodes of a given node use the ",(0,s.kt)("inlineCode",{parentName:"p"},"GSSNode.prevSet(): GSSNode<T>[]")," method."))}V.isMDXComponent=!0}}]);